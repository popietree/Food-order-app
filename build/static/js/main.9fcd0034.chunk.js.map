{"version":3,"sources":["components/Cart/Cart.module.css","components/Cart/CartItem.module.css","components/Cart/Checkout.module.css","components/Layout/Header/HeaderCartButton.module.css","components/Meals/AvailableMeals.module.css","components/Meals/MealItem/MealItem.module.css","components/UI/Modal/Modal.module.css","components/Layout/Header/Header.module.css","components/Meals/MealsSummary.module.css","components/UI/Card/Card.module.css","components/Meals/MealItem/MealItemForm.module.css","components/UI/Input/Input.module.css","assets/meals.jpg","components/Layout/Header/CartIcon.js","store/cart-context.js","components/Layout/Header/HeaderCartButton.js","components/Layout/Header/Header.js","components/Meals/MealsSummary.js","components/UI/Card/Card.js","components/UI/Input/Input.js","components/Meals/MealItem/MealItemForm.js","components/Meals/MealItem/MealItem.js","components/Meals/AvailableMeals.js","components/Meals/Meals.js","components/UI/Modal/Modal.js","components/Cart/CartItem.js","hooks/use-inputCopy.js","components/Cart/Checkout.js","components/Cart/Cart.js","store/CartProvider.js","App.js","index.js"],"names":["module","exports","CartIcon","xmlns","viewBox","fill","d","CartContext","React","createContext","items","totalAmount","addItem","item","removeItem","id","clearCart","HeaderCartButton","props","cartCtx","useContext","numberOfCartItems","reduce","curNumber","amount","useState","buttonIsHighlihgted","setButtonIsHighlihgted","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","onClick","className","icon","badge","Header","header","onShowCart","src","mealsImage","alt","MealsSummary","summary","Card","styles","card","children","Input","forwardRef","ref","input","htmlFor","label","MealItemForm","amountIsValid","setamountIsValid","enteredAmount","setEnteredAmount","amountInputRef","useRef","form","onSubmit","event","preventDefault","enteredAmountNumber","current","value","onAddToCart","onChange","target","console","log","type","step","min","max","defaultValue","MealItem","price","toFixed","meal","name","description","AvailibleMeals","meals","setMeals","error","setError","isLoading","setIsLaoding","sendRequest","a","fetch","response","ok","Error","json","key","data","loadedMeals","push","message","listOfMeals","map","MealsLoading","MealsError","Meals","AvailableMeals","Backdrop","backdrop","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","CartItem","actions","onRemove","onAdd","useInput","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasError","isValid","valueChangeHandler","inputBlurHandler","reset","Checkout","isNotEmpty","trim","enteredName","nameHasError","enteredNameIsValid","nameChangeHandler","nameBlurHandler","resetNameInput","enteredCity","cityHasError","enteredCityIsValid","cityChangeHandler","cityBlurHandler","resetCityInput","enteredStreet","streetHasError","enteredStreetIsValid","streetChangeHandler","streetBlurHandler","resetStreetInput","enteredPostalCode","postalCodeHasError","enteredPostalCodeIsValid","postalCodeChangeHandler","postalCodeBlurHandler","resetPostalCodeInput","determineInputClass","inputHasError","nameInputClasses","streetInputClasses","postalCodeInputClasses","cityInputClasses","onConfirm","city","street","postalCode","onBlur","onCancel","submit","Cart","isCheckOut","setIsCheckOut","cartTotal","cartItems","hasItems","cartItemRemoveHandler","cartItemAddHandler","isSumbiting","setIsSumbiting","didSumbit","setDidSubmit","confirmOrderHandler","userdata","method","body","JSON","stringify","user","orderedItem","modalActions","onClose","cartItemslist","bind","cartModalContent","total","isSumbitingModalContent","didSumbitModalContent","errorModalContent","defaultCartState","cartReducer","state","action","updatedItems","updatedTotalAmount","existingCartItemIndex","findIndex","existingCartItem","updatedItem","concat","existingItem","filter","CartProvider","useReducer","cartState","dispatchCartAction","cartContext","Provider","App","openCart","setOpenCart","render"],"mappings":"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","file":"static/js/main.9fcd0034.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__2pjQw\",\"total\":\"Cart_total__3pLin\",\"actions\":\"Cart_actions__1GOmr\",\"button--alt\":\"Cart_button--alt__1Z2QQ\",\"button\":\"Cart_button__fw1-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1B1_q\",\"summary\":\"CartItem_summary__3FMDj\",\"price\":\"CartItem_price__2Nl0j\",\"amount\":\"CartItem_amount__jUKEC\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__26gr1\",\"control\":\"Checkout_control__2qGfb\",\"actions\":\"Checkout_actions__2X_6_\",\"submit\":\"Checkout_submit__2BFZZ\",\"invalid\":\"Checkout_invalid__2gAN9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3Iwsi\",\"icon\":\"HeaderCartButton_icon__2FLrX\",\"badge\":\"HeaderCartButton_badge__22xm1\",\"bump\":\"HeaderCartButton_bump__XKXfA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"AvailableMeals_meals__2ZLCP\",\"meals-appear\":\"AvailableMeals_meals-appear__ONwLi\",\"MealsLoading\":\"AvailableMeals_MealsLoading__UmYIn\",\"MealsError\":\"AvailableMeals_MealsError__38x-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__2uJ70\",\"description\":\"MealItem_description__2YINS\",\"price\":\"MealItem_price__3sNYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3iXHD\",\"modal\":\"Modal_modal__30MRu\",\"slide-down\":\"Modal_slide-down__294fH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2O1C4\",\"main-image\":\"Header_main-image__90nQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__22zUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1te4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__32qVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__HkNJD\"};","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpg\";","const CartIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\n    </svg>\n  );\n};\n\nexport default CartIcon;\n","import React, { useContext } from \"react\";\n\nconst CartContext = React.createContext({\n  items: [],\n  totalAmount: 0,\n  addItem: (item) => {},\n  removeItem: (id) => {},\n  clearCart: (items) => {},\n});\n\nexport default CartContext;\n","import classes from \"./HeaderCartButton.module.css\";\nimport CartIcon from \"./CartIcon\";\nimport { useContext, useEffect, useState } from \"react\";\nimport CartContext from \"../../../store/cart-context\";\n\nconst HeaderCartButton = (props) => {\n  const cartCtx = useContext(CartContext);\n  const { items } = cartCtx;\n  const numberOfCartItems = cartCtx.items.reduce((curNumber, item) => {\n    return curNumber + item.amount;\n  }, 0);\n\n  //will chanage when set to true and trigger in element calsses\n  const [buttonIsHighlihgted, setButtonIsHighlihgted] = useState(false);\n\n  const btnClasses = `${classes.button} ${\n    buttonIsHighlihgted ? classes.bump : \"\"\n  }`;\n\n  useEffect(() => {\n    //if no items in cart, return\n    if (cartCtx.items.length === 0) {\n      return;\n    }\n    //highlight button\n    setButtonIsHighlihgted(true);\n    //remove bump classs\n    const timer = setTimeout(() => {\n      setButtonIsHighlihgted(false);\n    }, 300);\n    //cleanup function to clear the timer if elemnet removed\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [items]);\n  return (\n    <button onClick={props.onClick} className={btnClasses}>\n      <span className={classes.icon}>\n        <CartIcon />\n      </span>\n      <span> Your cart</span>\n\n      <span className={classes.badge}>{numberOfCartItems}</span>\n    </button>\n  );\n};\n\nexport default HeaderCartButton;\n","import mealsImage from \"../../../assets/meals.jpg\";\nimport classes from \"./Header.module.css\";\nimport HeaderCartButton from \"./HeaderCartButton\";\n\nconst Header = (props) => {\n  return (\n    <>\n      <header className={classes.header}>\n        <h1>Best You Meals</h1>\n        <HeaderCartButton onClick={props.onShowCart}>Cart</HeaderCartButton>\n      </header>\n      <div className={classes[\"main-image\"]}>\n        <img src={mealsImage} alt=\"table full of food\" />\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","import classes from \"./MealsSummary.module.css\";\nconst MealsSummary = () => {\n  return (\n    <section className={classes.summary}>\n      <h2>Your Food, Delivered To You</h2>\n      <p>\n        {\" \"}\n        Choose your custom meal from our broad selection of meals and enjoy a\n        delicious lunch or dinner at home.\n      </p>\n      <p>\n        {\" \"}\n        All our meals are cooked with high-quality ingredients, just-in-time and\n        of course by experienced chefs!\n      </p>\n    </section>\n  );\n};\n\nexport default MealsSummary;\n","import styles from \"./Card.module.css\";\nconst Card = (props) => {\n  const classes = `${styles.card} + ${props.className}`;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import classes from \"./Input.module.css\";\nimport React from \"react\";\nconst Input = React.forwardRef((props, ref) => {\n  return (\n    <div className={classes.input}>\n      <label htmlFor={props.input.id}>{props.label}</label>\n      <input ref={ref} {...props.input} />\n    </div>\n  );\n});\nexport default Input;\n","import classes from \"./MealItemForm.module.css\";\nimport { useState, useRef } from \"react\";\nimport Input from \"../../UI/Input/Input\";\n\nconst MealItemForm = (props) => {\n  const [amountIsValid, setamountIsValid] = useState(true);\n  const [enteredAmount, setEnteredAmount] = useState();\n  const amountInputRef = useRef();\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n    if (\n      enteredAmountNumber === 0 ||\n      enteredAmountNumber > 5 ||\n      enteredAmountNumber < 0\n    ) {\n      setamountIsValid(false);\n      return;\n    }\n    //will pass amount in form to meal item\n    props.onAddToCart(enteredAmountNumber);\n  };\n  const onChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    console.log(enteredAmount);\n  };\n\n  return (\n    <>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <Input\n          ref={amountInputRef}\n          label=\"Amount\"\n          onChange={onChangeHandler}\n          input={{\n            id: \"amount_\" + props.id,\n            type: \"number\",\n            step: \"1\",\n            min: \"1\",\n            max: \"5\",\n            defaultValue: \"1\",\n          }}\n        />\n        <button>+ Add</button>\n        {!amountIsValid && <p>Please enter valid amount 1-5</p>}\n      </form>\n    </>\n  );\n};\n\nexport default MealItemForm;\n","import classes from \"./MealItem.module.css\";\nimport MealItemForm from \"./MealItemForm\";\nimport { useContext } from \"react\";\nimport CartContext from \"../../../store/cart-context\";\nconst MealItem = (props) => {\n  //format price\n  const price = `${props.price.toFixed(2)}`;\n  const cartCtx = useContext(CartContext);\n\n  //how to connect the meal item clicked to pass to addItem\n  const addToCartHandler = (amount) => {\n    cartCtx.addItem({\n      id: props.id,\n      name: props.name,\n      amount: amount,\n      price: props.price,\n    });\n  };\n\n  return (\n    <li className={classes.meal}>\n      <div>\n        <h3>{props.name}</h3>\n        <div className={classes.description}>{props.description}</div>\n        <div className={classes.price}>{price}</div>\n      </div>\n      <div>\n        <MealItemForm onAddToCart={addToCartHandler} id={props.id} />\n        {/* //form render amount to adda and add to cart  button on right side */}\n      </div>\n    </li>\n  );\n};\n\nexport default MealItem;\n","import classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { useEffect, useState } from \"react\";\n\nconst AvailibleMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLaoding] = useState(false);\n  const sendRequest = async () => {\n    try {\n      //SET ERROR AND LOADING\n      setIsLaoding(true);\n      setError(null);\n      const response = await fetch(\n        \"https://meals-data-50c20-default-rtdb.firebaseio.com/meals.json\"\n      );\n      //GUARD CLAUSE\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n      const data = await response.json();\n      console.log(data, 999);\n      // DATA TRANSFORMATION\n      const loadedMeals = []; //CREATE EMPTY ARRAY\n      for (const key in data) {\n        loadedMeals.push({\n          // PUSH VALUES TO ARRAY TO EXTRACT DATA\n          key: key,\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price,\n        });\n      }\n      setMeals(loadedMeals); // GET ARRAY GLOBALLY WITH STATE Variable\n    } catch (error) {\n      setError(error.message || \"Something went wrong\");\n    }\n    setIsLaoding(false);\n  };\n\n  //only run when first loaded\n  useEffect(() => {\n    sendRequest();\n  }, []); //can call in useEffect w/ function\n  // list of meals\n\n  const listOfMeals = meals.map((item) => (\n    <MealItem\n      key={item.id}\n      id={item.id}\n      name={item.name}\n      description={item.description}\n      price={item.price}\n    ></MealItem>\n  ));\n  let content = listOfMeals;\n\n  if (isLoading) {\n    return (\n      <section className={classes.MealsLoading}>\n        <p> Loading...</p>\n      </section>\n    );\n  }\n  if (error) {\n    return (\n      <section className={classes.MealsError}>\n        <p> {error}</p>\n      </section>\n    );\n  }\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{listOfMeals}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailibleMeals;\n","import MealsSummary from \"./MealsSummary\";\nimport AvailableMeals from \"./AvailableMeals\";\nconst Meals = () => {\n  return (\n    <>\n      <MealsSummary></MealsSummary>\n      <AvailableMeals></AvailableMeals>\n    </>\n  );\n};\n\nexport default Meals;\n","import classes from \"./Modal.module.css\";\nimport ReactDOM from \"react-dom\";\n\nconst Backdrop = (props) => {\n  return <div className={classes.backdrop}></div>;\n};\nconst ModalOverlay = (props) => {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.content}>{props.children}</div>\n    </div>\n  );\n};\nconst portalElement = document.getElementById(\"overlays\");\nconst Modal = (props) => {\n  return (\n    <>\n      {ReactDOM.createPortal(<Backdrop />, portalElement)}\n      {ReactDOM.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalElement\n      )}\n    </>\n  );\n};\n\nexport default Modal;\n","import classes from \"./CartItem.module.css\";\nimport { useContext } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nconst CartItem = (props) => {\n  // const cartCtx = useContext(CartContext);\n  const price = `$ ${props.price.toFixed(2)}`;\n\n  return (\n    <li className={classes[\"cart-item\"]}>\n      <div>\n        <h2>{props.name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{price}</span>\n          <span className={classes.amount}>{props.amount}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={props.onRemove}>-</button>\n        <button onClick={props.onAdd}>+</button>\n      </div>\n    </li>\n  );\n};\nexport default CartItem;\n","import { useState } from \"react\";\nconst useInput = (validateValue) => {\n  // #1 touch state and value\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  //#2 Inferred States\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  //#3 change and blur handler\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n  const inputBlurHandler = (event) => {\n    setIsTouched(true);\n  };\n  //#4 reset function\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  //#5 return the needed states\n  return {\n    value: enteredValue,\n    hasError, // expose handlers so can be called from component using hook\n    isValid: valueIsValid,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n","import classes from \"./Checkout.module.css\";\nimport { useRef } from \"react\";\nimport useInput from \"../../hooks/use-inputCopy\";\nconst Checkout = (props) => {\n  //A. Create Ref\n  const nameInputRef = useRef();\n  const cityInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const streetInputRef = useRef();\n  const isNotEmpty = (value) => value.trim() !== \"\";\n\n  //#1 use Custom Input hook\n  const {\n    value: enteredName,\n    hasError: nameHasError,\n    isValid: enteredNameIsValid,\n    // #2 set Input with value, change blur\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredCity,\n    hasError: cityHasError,\n    isValid: enteredCityIsValid,\n    valueChangeHandler: cityChangeHandler,\n    inputBlurHandler: cityBlurHandler,\n    reset: resetCityInput,\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredStreet,\n    hasError: streetHasError,\n    isValid: enteredStreetIsValid,\n    valueChangeHandler: streetChangeHandler,\n    inputBlurHandler: streetBlurHandler,\n    reset: resetStreetInput,\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredPostalCode,\n    hasError: postalCodeHasError,\n    isValid: enteredPostalCodeIsValid,\n    valueChangeHandler: postalCodeChangeHandler,\n    inputBlurHandler: postalCodeBlurHandler,\n    reset: resetPostalCodeInput,\n  } = useInput(isNotEmpty);\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n    //B. Assign current ref value and in input\n    // const enteredName = nameInputRef.current.value;\n    // const enteredCity = cityInputRef.current.value;\n    // const enteredStreet = streetInputRef.current.value;\n    // const enteredPostalCode = postalCodeInputRef.current.value;\n\n    //#5 prevent form from submission if invalid\n    if (\n      !enteredPostalCodeIsValid ||\n      !enteredStreetIsValid ||\n      !enteredCityIsValid ||\n      !enteredNameIsValid\n    )\n      return;\n\n    //#4 RESET the touch and value OnSubmit\n    resetNameInput();\n    resetCityInput();\n    resetStreetInput();\n    resetPostalCodeInput();\n    //forward user data\n    props.onConfirm({\n      name: enteredName,\n      city: enteredCity,\n      street: enteredStreet,\n      postalCode: enteredPostalCode,\n    });\n  };\n\n  //#3 Determine Input ClassNames\n  const determineInputClass = (inputHasError) =>\n    `${classes[`control`]} ${inputHasError && classes[`invalid`]}`;\n  const nameInputClasses = determineInputClass(nameHasError);\n  const streetInputClasses = determineInputClass(streetHasError);\n  const postalCodeInputClasses = determineInputClass(postalCodeHasError);\n  const cityInputClasses = determineInputClass(cityHasError);\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n          type=\"text\"\n          id=\"name\"\n        />\n      </div>\n      <div className={streetInputClasses}>\n        <label htmlFor=\"street\">Street</label>\n        <input\n          value={enteredStreet}\n          onChange={streetChangeHandler}\n          onBlur={streetBlurHandler}\n          type=\"text\"\n          id=\"street\"\n        />\n      </div>\n      <div className={postalCodeInputClasses}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input\n          value={enteredPostalCode}\n          onChange={postalCodeChangeHandler}\n          onBlur={postalCodeBlurHandler}\n          type=\"text\"\n          id=\"postal\"\n        />\n      </div>\n      <div className={cityInputClasses}>\n        <label htmlFor=\"city\">City</label>\n        <input\n          value={enteredCity}\n          onChange={cityChangeHandler}\n          onBlur={cityBlurHandler}\n          type=\"text\"\n          id=\"city\"\n        />\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n","import classes from \"./Cart.module.css\";\nimport ReactDOM from \"react-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport Modal from \"../UI/Modal/Modal\";\nimport { useContext } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\n\nconst Cart = (props) => {\n  const [isCheckOut, setIsCheckOut] = useState(false);\n\n  const [isCancel, setIsCancel] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const cartTotal = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const cartItems = cartCtx.items;\n  //only show order button if has items\n  const hasItems = cartItems.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n    console.log(id);\n  };\n  const cartItemAddHandler = (item) => {\n    console.log(cartCtx.items);\n    cartCtx.addItem({ ...item, amount: 1 });\n  };\n\n  const orderHandler = () => {\n    setIsCheckOut(true);\n    console.log(\"ordered\");\n  };\n  const cancelHandler = () => {\n    setIsCheckOut(false);\n    console.log(\"cancel\");\n  };\n  const [error, setError] = useState(null);\n  const [isSumbiting, setIsSumbiting] = useState(false);\n  const [didSumbit, setDidSubmit] = useState(false);\n\n  const confirmOrderHandler = async (userdata) => {\n    console.log(\"confirm\");\n\n    try {\n      //SET ERROR AND LOADING\n      setIsSumbiting(true);\n      setError(null);\n      const response = await fetch(\n        \"https://meals-data-50c20-default-rtdb.firebaseio.com/orders.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            user: userdata,\n            orderedItem: cartCtx.items,\n          }),\n        }\n      );\n      //GUARD CLAUSE\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      // DATA TRANSFORMATION\n    } catch (error) {\n      setError(error.message || \"Something went wrong\");\n    }\n    //SET is Submitting\n    setIsSumbiting(false);\n    //SET did Submit\n    setDidSubmit(true);\n    cartCtx.clearCart();\n  };\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <button onClick={props.onClose} className={classes[\"button--alt\"]}>\n        Close\n      </button>\n      {hasItems && (\n        <button onClick={orderHandler} className={classes.button}>\n          Order\n        </button>\n      )}\n    </div>\n  );\n\n  const cartItemslist = cartItems.map((item) => {\n    return (\n      <CartItem\n        key={item.id}\n        id={item.id}\n        name={item.name}\n        amount={item.amount}\n        price={item.price}\n        onRemove={cartItemRemoveHandler.bind(null, item.id)}\n        onAdd={cartItemAddHandler.bind(null, item)}\n      />\n    );\n  });\n\n  const cartModalContent = (\n    <>\n      {\" \"}\n      <ul className={classes[\"cart-items\"]}> {cartItemslist}</ul>\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span> {cartTotal} </span>\n      </div>\n      {isCheckOut && (\n        <Checkout onConfirm={confirmOrderHandler} onCancel={cancelHandler} />\n      )}\n      {!isCheckOut && modalActions}\n    </>\n  );\n  const isSumbitingModalContent = <p>Sending Ordering Data...</p>;\n  const didSumbitModalContent = (\n    <>\n      <p>Sucessfully Sent Order!</p>\n      <div className={classes.actions}>\n        <button onClick={props.onClose} className={classes.button}>\n          Close\n        </button>\n      </div>\n    </>\n  );\n\n  const errorModalContent = (\n    <>\n      <p>Something Went Wrong!</p>\n      <div className={classes.actions}>\n        <button onClick={props.onClose} className={classes.button}>\n          Close\n        </button>\n      </div>\n    </>\n  );\n  return (\n    <>\n      <Modal onClose={props.onClose}>\n        {!isSumbiting && !didSumbit && cartModalContent}\n        {!error && isSumbiting && isSumbitingModalContent}\n        {!error && didSumbit && !isSumbiting && didSumbitModalContent}\n        {error && errorModalContent}\n      </Modal>\n    </>\n  );\n};\n\nexport default Cart;\n","import CartContext from \"./cart-context\";\nimport { useReducer, useRef } from \"react\";\n\nconst defaultCartState = {\n  items: [],\n  //all cart value\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    //returns index of multiple meal items\n    const existingCartItem = state.items[existingCartItemIndex];\n\n    let updatedItems;\n\n    //if item in cart\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n      //imutaable make copy of old array\n      updatedItems = [...state.items];\n      //update the index of the duplicated item\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n    //if not in cart\n    else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return { items: updatedItems, totalAmount: updatedTotalAmount };\n  }\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n    } else {\n      //if need to descrese a exisiting item by 1\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if ((action.type = \"CLEAR\")) {\n    return defaultCartState;\n  }\n\n  return defaultCartState;\n};\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    console.log(id);\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const clearCartHandler = () => {\n    dispatchCartAction({ type: \"CLEAR\" });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    clearCart: clearCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n","import Header from \"./components/Layout/Header/Header\";\nimport Meals from \"./components/Meals/Meals\";\nimport Cart from \"./components/Cart/Cart\";\nimport { useState } from \"react\";\nimport CartProvider from \"./store/CartProvider\";\nimport Checkout from \"./components/Cart/Checkout\";\nfunction App() {\n  const [openCart, setOpenCart] = useState(false);\n  const hideCartHandler = () => {\n    setOpenCart(false);\n  };\n  const showCartHandler = () => {\n    setOpenCart(true);\n  };\n\n  return (\n    <CartProvider>\n      {openCart && <Cart onClose={hideCartHandler} />}\n      <Header onShowCart={showCartHandler}></Header>\n      <main>\n        <Meals />\n      </main>\n    </CartProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}